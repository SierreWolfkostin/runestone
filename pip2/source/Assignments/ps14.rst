:orphan:

..  Copyright (C) Paul Resnick.  Permission is granted to copy, distribute
    and/or modify this document under the terms of the GNU Free Documentation
    License, Version 1.3 or any later version published by the Free Software
    Foundation; with Invariant Sections being Forward, Prefaces, and
    Contributor List, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
    the license is included in the section entitled "GNU Free Documentation
    License".

.. highlight:: python
    :linenothreshold: 500


Week 14: ends December 7
========================

1. Do the multiple choice questions and exercises in the textbook chapters, including the ones at the bottom of the chapters, below the glossary. Don't forget to click Save for each of the exercises, and always access the textbook by clicking on the link from cTools, so that you'll be logged in.
   

   * by Monday night (optional). If you submit your project plan (a filled-in project_plan.py document) on cTools by Monday midnight, there's a good chance Jackie or I will have a chance to review it before Tuesday's class, and you may get feedback during class or online, in time to make revisions before the Tuesday night final submission deadline.

   * Before Tuesday's class:
      
      * Read external tutorial about `UNIX regular expressions with grep <https://www.ibm.com/developerworks/aix/library/au-speakingunix9/>`_. 
         * From the bash shell command line, execute some grep regular expressions on your code files. Challenge: write one to find lines of code that any for loop lines that don't end with a colon (if you have any).

      * Read external tutorial about `regular expressions in Python <https://docs.python.org/2/howto/regex.html>`_
         * Write a file with python code that executes some of the regular expressions in the tutorial.

   * Before Thursday's class:
         * Read a little about the `Natural Language ToolKit <http://www.nltk.org/>`_.  This will prepare you for Jackie's awesome demo in class on Thursday, where she makes a madlib generator in just a few lines of code.    
   
    
#. Reading responses

   * By **Wednesday** midnight: 

      * Read *The Success of Open Source*, Chapter 6
      * :ref:`Reading response 13 <reading_response_13>`

#. Problem set/ Project

   * No problem set this week!
   * Last week's ps12 is due by noon on Tuesday, Dec. 2
   * Project plan is due by midnight on Tuesday, Dec. 2
   * Final project, git extra credit, and accumulation extra credit are all due by noon on Tuesday, Dec. 9
    
   
Reading Response
----------------

.. _reading_response_13:

Answer the following questions. 

1. On p. 176-177, Weber describes "flaming" and "shunning" as ways to sanction developers who don't behave properly in an open source project. Referring back to the benefits from (motivations for) participation in the previous chapter, which benefits could effectively be taken away from developers through flaiming and shunning? 

#. Any new thoughts on GPL vs. BSD licenses from revisiting them in this chapter?
  

.. activecode:: rr_13_1

   # Fill in your response in between the triple quotes
   s = """

   """
   print s
